//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AcmeCursos.ProfessorServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProfessorServices.IProfessorService")]
    public interface IProfessorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Professor/Get", ReplyAction="http://tempuri.org/ICrudOf_Professor/GetResponse")]
        AcmeCursos.Models.Professor Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Professor/Get", ReplyAction="http://tempuri.org/ICrudOf_Professor/GetResponse")]
        System.Threading.Tasks.Task<AcmeCursos.Models.Professor> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Professor/GetAll", ReplyAction="http://tempuri.org/ICrudOf_Professor/GetAllResponse")]
        AcmeCursos.Models.Professor[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Professor/GetAll", ReplyAction="http://tempuri.org/ICrudOf_Professor/GetAllResponse")]
        System.Threading.Tasks.Task<AcmeCursos.Models.Professor[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Professor/Delete", ReplyAction="http://tempuri.org/ICrudOf_Professor/DeleteResponse")]
        bool Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Professor/Delete", ReplyAction="http://tempuri.org/ICrudOf_Professor/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Professor/Save", ReplyAction="http://tempuri.org/ICrudOf_Professor/SaveResponse")]
        AcmeCursos.Models.Professor Save(AcmeCursos.Models.Professor entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Professor/Save", ReplyAction="http://tempuri.org/ICrudOf_Professor/SaveResponse")]
        System.Threading.Tasks.Task<AcmeCursos.Models.Professor> SaveAsync(AcmeCursos.Models.Professor entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorService/GetProfessorComCursos", ReplyAction="http://tempuri.org/IProfessorService/GetProfessorComCursosResponse")]
        AcmeCursos.Models.Professor GetProfessorComCursos(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorService/GetProfessorComCursos", ReplyAction="http://tempuri.org/IProfessorService/GetProfessorComCursosResponse")]
        System.Threading.Tasks.Task<AcmeCursos.Models.Professor> GetProfessorComCursosAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorService/SaveWithCursos", ReplyAction="http://tempuri.org/IProfessorService/SaveWithCursosResponse")]
        AcmeCursos.Models.Professor SaveWithCursos(AcmeCursos.Models.Professor professor, int[] CursoIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfessorService/SaveWithCursos", ReplyAction="http://tempuri.org/IProfessorService/SaveWithCursosResponse")]
        System.Threading.Tasks.Task<AcmeCursos.Models.Professor> SaveWithCursosAsync(AcmeCursos.Models.Professor professor, int[] CursoIds);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfessorServiceChannel : AcmeCursos.ProfessorServices.IProfessorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfessorServiceClient : System.ServiceModel.ClientBase<AcmeCursos.ProfessorServices.IProfessorService>, AcmeCursos.ProfessorServices.IProfessorService {
        
        public ProfessorServiceClient() {
        }
        
        public ProfessorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProfessorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfessorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfessorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AcmeCursos.Models.Professor Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<AcmeCursos.Models.Professor> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public AcmeCursos.Models.Professor[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<AcmeCursos.Models.Professor[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public bool Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public AcmeCursos.Models.Professor Save(AcmeCursos.Models.Professor entity) {
            return base.Channel.Save(entity);
        }
        
        public System.Threading.Tasks.Task<AcmeCursos.Models.Professor> SaveAsync(AcmeCursos.Models.Professor entity) {
            return base.Channel.SaveAsync(entity);
        }
        
        public AcmeCursos.Models.Professor GetProfessorComCursos(int id) {
            return base.Channel.GetProfessorComCursos(id);
        }
        
        public System.Threading.Tasks.Task<AcmeCursos.Models.Professor> GetProfessorComCursosAsync(int id) {
            return base.Channel.GetProfessorComCursosAsync(id);
        }
        
        public AcmeCursos.Models.Professor SaveWithCursos(AcmeCursos.Models.Professor professor, int[] CursoIds) {
            return base.Channel.SaveWithCursos(professor, CursoIds);
        }
        
        public System.Threading.Tasks.Task<AcmeCursos.Models.Professor> SaveWithCursosAsync(AcmeCursos.Models.Professor professor, int[] CursoIds) {
            return base.Channel.SaveWithCursosAsync(professor, CursoIds);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AcmeCursos.InscricaoServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InscricaoServices.IInscricaoService")]
    public interface IInscricaoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Inscricao/Get", ReplyAction="http://tempuri.org/ICrudOf_Inscricao/GetResponse")]
        AcmeCursos.Models.Inscricao Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Inscricao/Get", ReplyAction="http://tempuri.org/ICrudOf_Inscricao/GetResponse")]
        System.Threading.Tasks.Task<AcmeCursos.Models.Inscricao> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Inscricao/GetAll", ReplyAction="http://tempuri.org/ICrudOf_Inscricao/GetAllResponse")]
        AcmeCursos.Models.Inscricao[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Inscricao/GetAll", ReplyAction="http://tempuri.org/ICrudOf_Inscricao/GetAllResponse")]
        System.Threading.Tasks.Task<AcmeCursos.Models.Inscricao[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Inscricao/Delete", ReplyAction="http://tempuri.org/ICrudOf_Inscricao/DeleteResponse")]
        bool Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Inscricao/Delete", ReplyAction="http://tempuri.org/ICrudOf_Inscricao/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Inscricao/Save", ReplyAction="http://tempuri.org/ICrudOf_Inscricao/SaveResponse")]
        AcmeCursos.Models.Inscricao Save(AcmeCursos.Models.Inscricao entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudOf_Inscricao/Save", ReplyAction="http://tempuri.org/ICrudOf_Inscricao/SaveResponse")]
        System.Threading.Tasks.Task<AcmeCursos.Models.Inscricao> SaveAsync(AcmeCursos.Models.Inscricao entity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInscricaoServiceChannel : AcmeCursos.InscricaoServices.IInscricaoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InscricaoServiceClient : System.ServiceModel.ClientBase<AcmeCursos.InscricaoServices.IInscricaoService>, AcmeCursos.InscricaoServices.IInscricaoService {
        
        public InscricaoServiceClient() {
        }
        
        public InscricaoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InscricaoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InscricaoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InscricaoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AcmeCursos.Models.Inscricao Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<AcmeCursos.Models.Inscricao> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public AcmeCursos.Models.Inscricao[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<AcmeCursos.Models.Inscricao[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public bool Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public AcmeCursos.Models.Inscricao Save(AcmeCursos.Models.Inscricao entity) {
            return base.Channel.Save(entity);
        }
        
        public System.Threading.Tasks.Task<AcmeCursos.Models.Inscricao> SaveAsync(AcmeCursos.Models.Inscricao entity) {
            return base.Channel.SaveAsync(entity);
        }
    }
}
